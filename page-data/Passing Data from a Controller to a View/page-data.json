{"componentChunkName":"component---src-templates-blog-post-js","path":"/Passing Data from a Controller to a View/","result":{"data":{"site":{"siteMetadata":{"title":"Notes on .NET Development"}},"markdownRemark":{"id":"932b6df0-4e06-5ff6-b3fb-00cf07ee3649","excerpt":"TempData is a great option TempData is a storage container for data that needs to be available to a separate HTTP request. Most often with a POST the controller…","html":"<h2>TempData is a great option</h2>\n<p>TempData is a storage container for data that needs to be available to a separate HTTP request.</p>\n<p>Most often with a POST the controller will contain a <code>RedirectToAction(“Index”)</code> that will navigate the user to the appropriate controller action - in this example redirecting to the <code>Index</code> Action of the <code>Create</code> Controller.</p>\n<p>I needed a means of confirming to the user that their <code>Create</code> request had been successful. I did not want to modify the model to include a:</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> formResult <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>and i did not want to create a dedicated ViewModel</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">viewModel</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> formResult <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token function\">View</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>just to hold the result of the action e.g. successful create. This is where TempData can be very, very useful for situations such as this where the use case is <strong><em>notifying the user</em></strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">TempData<span class=\"token punctuation\">[</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"...passing various properties... created!\"</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>and then in the view:</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">@<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>TempData<span class=\"token punctuation\">[</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"alert alert-success\"</span><span class=\"token operator\">></span>\n    @TempData<span class=\"token punctuation\">[</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Once the value has been <strong><em>read</em></strong> it is <strong><em>automatically marked for deletion and is no longer available on subsequent requests</em></strong>, this makes it parcticularly useful for passing success notifications to the user.</p>","frontmatter":{"title":"User Notifications","date":"April 11, 2021","description":"TempData can be very useful in particular circumstances, one does not always need a ViewModel..."}},"previous":{"fields":{"slug":"/ValidateAntiForgeryToken/"},"frontmatter":{"title":"ValidateAntiForgeryToken"}},"next":{"fields":{"slug":"/Repository/"},"frontmatter":{"title":"Basic Repository Implementation"}}},"pageContext":{"id":"932b6df0-4e06-5ff6-b3fb-00cf07ee3649","previousPostId":"4681b9e3-7316-59c0-b8ee-2ebdecdfa6c8","nextPostId":"13b1837b-a8bd-57eb-90bc-2f3655f05783"}},"staticQueryHashes":["2841359383","3257411868"]}